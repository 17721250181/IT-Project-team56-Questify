# -------------------------------------------------------------
# CI (Backend + Frontend) and CD (Render + GitHub Pages)
# -------------------------------------------------------------
name: CI (Backend + Frontend + Deploy)

on:
  push:
    branches: [TestMainBranch]           # deploy only from main
  pull_request:                  # PRs run tests/build only

# Required for GitHub Pages actions
permissions:
  contents: read
  pages: write
  id-token: write

# Avoid overlapping Pages publishes
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # ----------------------------
  # BACKEND: test on Postgres
  # ----------------------------
  backend-test:
    name: Backend (Django + pytest on Postgres)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d appdb"
          --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      # CI uses Postgres; your settings.py should fall back to SQLite locally.
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/appdb
      SECRET_KEY: test-secret
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Django migrate
        working-directory: backend
        run: python manage.py migrate --noinput

      - name: Run backend tests
        working-directory: backend
        run: pytest -s -v

  # ----------------------------
  # FRONTEND: test + build + upload Pages artifact
  # ----------------------------
  frontend-test-build:
    name: Frontend (tests + build)
    runs-on: ubuntu-latest
    needs: backend-test

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: frontend
        run: npm run test

      - name: Build frontend (Vite)
        working-directory: frontend
        run: npm -s run build

      # Enable & configure Pages for this repo (safe to run repeatedly)
      - name: Configure Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4
        with:
          enablement: true

      # Upload the built site as the Pages artifact
      - name: Upload artifact for Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  # ----------------------------
  # BACKEND: deploy to Render
  # ----------------------------
  backend-deploy:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: backend-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Fail clearly if the deploy hook secret is missing
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "RENDER_DEPLOY_HOOK secret is missing."
            echo "Add it in Repo → Settings → Secrets and variables → Actions."
            exit 1
          fi

      - name: Trigger Render deploy hook
        run: |
          # show HTTP status while wiring; change to '-fsS' once stable
          curl -i -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

  # ----------------------------
  # FRONTEND: publish to GitHub Pages
  # ----------------------------
  frontend-deploy:
    name: Deploy Frontend to GitHub Pages
    runs-on: ubuntu-latest
    needs: frontend-test-build
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

        #testing