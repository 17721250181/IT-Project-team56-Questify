# -------------------------------------------------------------
# CI (Backend + Frontend) and CD (Render + GitHub Pages)
# -------------------------------------------------------------
name: CI (Backend + Frontend + E2E)

on:
  push:
    branches: [ main ]        # deploys only on main
  pull_request:               # PRs: run tests/build only

permissions:
  contents: read
  pages: write                # required by deploy-pages
  id-token: write             # required by deploy-pages

concurrency:
  group: "pages"              # avoid overlapping Pages publishes
  cancel-in-progress: true

jobs:
  backend-test:
    name: Backend (Django + pytest on Postgres)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d appdb"
          --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/appdb
      SECRET_KEY: test-secret
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SKIP_SEED_DATA: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Django migrate
        working-directory: backend
        run: python manage.py migrate --noinput
      - name: Run backend tests
        working-directory: backend
        run: pytest -s -v

  frontend-test-build:
    name: Frontend (tests + build)
    runs-on: ubuntu-latest
    needs: backend-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Run frontend tests
        working-directory: frontend
        run: npm run test
      - name: Build frontend (Vite)
        working-directory: frontend
        run: npm -s run build

  backend-deploy:
    name: Deploy Backend to Render
    needs: backend-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Precheck secret exists
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "RENDER_DEPLOY_HOOK secret is missing. Add it in Repo → Settings → Secrets → Actions."
            exit 1
          fi
      - name: Trigger Render Deploy (show HTTP status)
        run: |
          set -e
          curl -i -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
          # remove -f so you can see 4xx/5xx responses during setup;
          # once working, you may switch to: curl -fsS -X POST "..."
          echo "Triggered Render deploy hook."

